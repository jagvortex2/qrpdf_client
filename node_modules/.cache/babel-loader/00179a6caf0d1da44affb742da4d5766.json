{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FileSaver from 'file-saver';\nimport styles from './QRCodeForm.module.css';\nconst QRCodeForm = () => {\n  const [articulos, setArticulos] = useState([]);\n  const [selectedArticulo, setSelectedArticulo] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchArticulos = async () => {\n      try {\n        const response = await axios.get('http://192.168.0.110:5000/articulos');\n        setArticulos(response.data);\n      } catch (error) {\n        console.error('Error fetching articulos:', error.message);\n        setError('Error fetching articulos. Please try again.');\n      }\n    };\n    fetchArticulos();\n  }, []);\n  const handleGeneratePDF = async () => {\n    try {\n      setLoading(true);\n\n      // Make API request using Axios\n      const response = await axios.post('http://192.168.0.110:5000/generarpdf', {\n        Descripcion: selectedArticulo.Descripcion,\n        ArticuloDetalle: selectedArticulo.ArticuloDetalle\n      }, {\n        responseType: 'blob'\n      } // Set responseType to 'blob' to receive a Blob\n      );\n\n      // Handle the successful response\n      const pdfBlob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n\n      // Use FileSaver.js to trigger the download\n      FileSaver.saveAs(pdfBlob, `${selectedArticulo.ArticuloDetalle}.pdf`);\n\n      // Reset form fields and loading state\n      setSelectedArticulo('');\n      setSearchText('');\n      setLoading(false);\n      setError(null);\n    } catch (error) {\n      // Handle errors\n      console.error('Error generating PDF:', error.message);\n      setError('Error generating PDF. Please try again.');\n      setLoading(false);\n    }\n  };\n  const handleArticuloChange = event => {\n    const selected = articulos.find(articulo => articulo.ArticuloDetalle === event.target.value);\n    setSelectedArticulo(selected);\n    setSearchText(''); // Reset the search text when an option is selected\n  };\n  const filteredArticulos = articulos.filter(articulo => articulo.Descripcion.toLowerCase().includes(searchText.toLowerCase()));\n\n  /* return (\r\n    <div>\r\n      <h2>Generar PDF con formato para viñetas</h2>\r\n      <form>\r\n        <label>\r\n          Buscar Articulo:\r\n          <input\r\n            type=\"text\" \r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Pendiente su funcion\"\r\n            disabled//={selectedArticulo !== ''}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Seleccione Articulo:\r\n          <select value={selectedArticulo.ArticuloDetalle} onChange={handleArticuloChange}>\r\n            <option value=\"\" disabled>Seleccione Articulo</option>\r\n            {filteredArticulos.map((articulo) => (\r\n              <option key={articulo.ArticuloDetalle} value={articulo.ArticuloDetalle}>\r\n                {articulo.Descripcion}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        {loading && <p>Cargando...</p>}\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <button type=\"button\" onClick={handleGeneratePDF} disabled={loading}>\r\n          Generar PDF con viñetas QR\r\n        </button>\r\n      </form>\r\n    </div>\r\n  ); */\n};\nexport default QRCodeForm;","map":{"version":3,"names":["React","useState","useEffect","axios","FileSaver","styles","QRCodeForm","articulos","setArticulos","selectedArticulo","setSelectedArticulo","searchText","setSearchText","loading","setLoading","error","setError","fetchArticulos","response","get","data","console","message","handleGeneratePDF","post","Descripcion","ArticuloDetalle","responseType","pdfBlob","Blob","type","saveAs","handleArticuloChange","event","selected","find","articulo","target","value","filteredArticulos","filter","toLowerCase","includes"],"sources":["C:/Users/Informática/Documents/devs/optionpage/options-app/src/QRCodeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FileSaver from 'file-saver';\r\nimport styles from './QRCodeForm.module.css';\r\n\r\nconst QRCodeForm = () => {\r\n  const [articulos, setArticulos] = useState([]);\r\n  const [selectedArticulo, setSelectedArticulo] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchArticulos = async () => {\r\n      try {\r\n        const response = await axios.get('http://192.168.0.110:5000/articulos');\r\n        setArticulos(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching articulos:', error.message);\r\n        setError('Error fetching articulos. Please try again.');\r\n      }\r\n    };\r\n\r\n    fetchArticulos();\r\n  }, []);\r\n\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      setLoading(true);\r\n  \r\n      // Make API request using Axios\r\n      const response = await axios.post(\r\n        'http://192.168.0.110:5000/generarpdf',\r\n        {\r\n          Descripcion: selectedArticulo.Descripcion,\r\n          ArticuloDetalle: selectedArticulo.ArticuloDetalle,\r\n        },\r\n        { responseType: 'blob' } // Set responseType to 'blob' to receive a Blob\r\n      );\r\n  \r\n      // Handle the successful response\r\n      const pdfBlob = new Blob([response.data], { type: 'application/pdf' });\r\n  \r\n      // Use FileSaver.js to trigger the download\r\n      FileSaver.saveAs(pdfBlob, `${selectedArticulo.ArticuloDetalle}.pdf`);\r\n  \r\n      // Reset form fields and loading state\r\n      setSelectedArticulo('');\r\n      setSearchText('');\r\n      setLoading(false);\r\n      setError(null);\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error generating PDF:', error.message);\r\n      setError('Error generating PDF. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleArticuloChange = (event) => {\r\n    const selected = articulos.find((articulo) => articulo.ArticuloDetalle === event.target.value);\r\n    setSelectedArticulo(selected);\r\n    setSearchText(''); // Reset the search text when an option is selected\r\n  };\r\n\r\n  const filteredArticulos = articulos.filter((articulo) =>\r\n    articulo.Descripcion.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  /* return (\r\n    <div>\r\n      <h2>Generar PDF con formato para viñetas</h2>\r\n      <form>\r\n        <label>\r\n          Buscar Articulo:\r\n          <input\r\n            type=\"text\" \r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Pendiente su funcion\"\r\n            disabled//={selectedArticulo !== ''}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Seleccione Articulo:\r\n          <select value={selectedArticulo.ArticuloDetalle} onChange={handleArticuloChange}>\r\n            <option value=\"\" disabled>Seleccione Articulo</option>\r\n            {filteredArticulos.map((articulo) => (\r\n              <option key={articulo.ArticuloDetalle} value={articulo.ArticuloDetalle}>\r\n                {articulo.Descripcion}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        {loading && <p>Cargando...</p>}\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <button type=\"button\" onClick={handleGeneratePDF} disabled={loading}>\r\n          Generar PDF con viñetas QR\r\n        </button>\r\n      </form>\r\n    </div>\r\n  ); */\r\n};\r\n\r\nexport default QRCodeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}