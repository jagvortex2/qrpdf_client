{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JhonatanJesusArceGon\\\\Documents\\\\devs-nyc-proyects\\\\devs\\\\optionpage\\\\options-app\\\\src\\\\QRCodeForm.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import FileSaver from 'file-saver';\n// import styles from './QRCodeForm.module.css';\n\n// const QRCodeForm = React.memo(() => {\n//   // State hooks to manage component state\n//   const [articulos, setArticulos] = useState([]); // List of articulo fetched from the server\n//   const [selectedArticulo, setSelectedArticulo] = useState(''); // Currently selected articulo\n//   const [searchText, setSearchText] = useState(''); // Text used for filtering articulo\n//   const [loading, setLoading] = useState(false); // Loading indicator\n//   const [error, setError] = useState(null); // Error message, if any\n\n//   useEffect(() => {\n//     // Effect hook to fetch articulo when the component mounts\n//     const fetchArticulos = async () => {\n//       try {\n//         // Fetches the list of 'articulo' from the server\n//         const response = await axios.get('http://192.168.0.113:5000/articulos');\n//         // Sorts the 'articulo' based on 'Descripcion'\n//         const sortedArticulos = response.data.sort((a, b) => a.DESCRIPCION.localeCompare(b.DESCRIPCION));\n//         // Sets the sorted 'articulo' in the component's state\n//         setArticulos(sortedArticulos);\n//       } catch (error) {\n//         console.error('Error fetching articulo:', error.message);\n//         setError('Error fetching articulo. Please try again.');\n//       }\n//     };\n\n//     // Calls the fetcharticulo function when the component mounts\n//     fetchArticulos();\n//   }, []);\n\n//   // Function to handle the generation and download of a PDF based on the selectedArticulo\n//   const handleGeneratePDF = async () => {\n//     try {\n//       // Sets the loading state to true\n//       setLoading(true);\n\n//       // Makes an API request using Axios to generate PDF\n//       const response = await axios.post(\n//         'http://192.168.0.113:5000/generarpdf',\n//         {\n//           ARTICULO: selectedArticulo.ARTICULO,\n//           DESCRIPCION: selectedArticulo.DESCRIPCION,\n//         },\n//         { responseType: 'blob' } // Sets responseType to 'blob' to receive a Blob\n//       );\n\n//       // Creates a Blob object from the response data\n//       const pdfBlob = new Blob([response.data], { type: 'application/pdf' });\n\n//       // Uses FileSaver.js to trigger the download of the PDF\n//       FileSaver.saveAs(pdfBlob, `${selectedArticulo.ARTICULO}.pdf`);\n\n//       // Resets form fields and loading state\n//       setSelectedArticulo('');\n//       setSearchText('');\n//       setLoading(false);\n//       setError(null);\n//     } catch (error) {\n//       // Handles errors during PDF generation\n//       console.error('Error generating PDF:', error.message);\n//       setError('Error generating PDF. Please try again.');\n//       setLoading(false);\n//     }\n//   };\n\n//   // Function to handle the change of selectedArticulo when an option is selected\n//   const handleArticuloChange = (event) => {\n//     // Finds the selected articulo by matching ARTICULO or DESCRIPCION\n//     const selected = articulos.find(\n//       (articulo) =>\n//         articulo.ARTICULO.toUpperCase() === event.target.value.toUpperCase() ||\n//         articulo.DESCRIPCION.toUpperCase() === event.target.value.toUpperCase()\n//     );\n//     setSelectedArticulo(selected);\n//     setSearchText(''); // Resets the search text when an option is selected\n//   };\n\n//   // Creates a filtered list of articulo based on the searchText\n//   const filteredArticulos = articulos.filter(\n//     (articulo) =>\n//       articulo.ARTICULO.toLowerCase().includes(searchText.toLowerCase()) ||\n//       articulo.DESCRIPCION.toLowerCase().includes(searchText.toLowerCase())\n//   );\n\n//   // Component JSX\n//   return (\n//     <div className={styles.container}>\n//       {/* Form for selecting and generating PDF for an articulo */}\n//       <form className={styles.form}>\n//         {/* Search input for filtering articulos */}\n//         <label className={styles.label}>\n//           Buscar Articulo:\n//           <input\n//             type=\"text\"\n//             value={searchText}\n//             onChange={(e) => setSearchText(e.target.value)}\n//             placeholder=\"Pendiente su funcion\"\n//             disabled={selectedArticulo !== ''}\n//             className={styles.input}\n//           />\n//         </label>\n\n//         {/* Dropdown for selecting an articulo */}\n//         <label className={styles.label}>\n//           Seleccione Articulo:\n//           <select\n//             value={selectedArticulo ? selectedArticulo.DESCRIPCION : ''}\n//             onChange={handleArticuloChange}\n//             className={styles.select}\n//           >\n//             <option value=\"\" disabled>\n//               Seleccione Articulo\n//             </option>\n\n//             {/* Render the sorted options directly */}\n//             {filteredArticulos.map(({ ARTICULO, DESCRIPCION }) => (\n//               <option key={ARTICULO} value={DESCRIPCION}>\n//                 {DESCRIPCION}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n\n//         {/* Loading and error messages */}\n//         {loading && <p style={{ textAlign: 'center' }}>Cargando...</p>}\n//         {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\n\n//         {/* Button to generate PDF */}\n//         <button\n//           type=\"button\"\n//           onClick={handleGeneratePDF}\n//           disabled={loading || !selectedArticulo}\n//           className={styles.button}\n//         >\n//           Generar PDF con vi√±etas QR\n//         </button>\n//       </form>\n//     </div>\n//   );\n// });\n\n// // Exports the QRCodeForm component as the default export of the module\n// export default QRCodeForm;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FileSaver from 'file-saver';\nimport styles from './QRCodeForm.module.css';\nconst QRCodeForm = React.memo(() => {\n  // State hooks to manage component state\n  const [articulos, setArticulos] = useState([]); // List of articulo fetched from the server\n  const [selectedArticulo, setSelectedArticulo] = useState(''); // Currently selected articulo\n  const [searchText, setSearchText] = useState(''); // Text used for filtering articulo\n  const [loading, setLoading] = useState(false); // Loading indicator\n  const [error, setError] = useState(null); // Error message, if any\n  const [suggestions, setSuggestions] = useState([]); // Suggestions based on search input\n\n  useEffect(() => {\n    // Effect hook to fetch articulo when the component mounts\n    const fetchArticulos = async () => {\n      try {\n        // Fetches the list of 'articulo' from the server\n        const response = await axios.get('http://192.168.0.17:5000/articulos');\n        // Sorts the 'articulo' based on 'Descripcion'\n        const sortedArticulos = response.data.sort((a, b) => a.DESCRIPCION.localeCompare(b.DESCRIPCION));\n        // Sets the sorted 'articulo' in the component's state\n        setArticulos(sortedArticulos);\n      } catch (error) {\n        console.error('Error fetching articulo:', error.message);\n        setError('Error fetching articulo. Please try again.');\n      }\n    };\n\n    // Calls the fetcharticulo function when the component mounts\n    fetchArticulos();\n  }, []);\n\n  // Function to handle the generation and download of a PDF based on the selectedArticulo\n  const handleGeneratePDF = async () => {\n    try {\n      // Sets the loading state to true\n      setLoading(true);\n\n      // Makes an API request using Axios to generate PDF\n      const response = await axios.post('http://192.168.0.17:5000/generarpdf', {\n        ARTICULO: selectedArticulo.ARTICULO,\n        DESCRIPCION: selectedArticulo.DESCRIPCION\n      }, {\n        responseType: 'blob'\n      } // Sets responseType to 'blob' to receive a Blob\n      );\n\n      // Creates a Blob object from the response data\n      const pdfBlob = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n\n      // Uses FileSaver.js to trigger the download of the PDF\n      FileSaver.saveAs(pdfBlob, `${selectedArticulo.ARTICULO}.pdf`);\n\n      // Resets form fields and loading state\n      setSelectedArticulo('');\n      setSearchText('');\n      setLoading(false);\n      setError(null);\n      setSuggestions([]); // Clear suggestions after generating PDF\n    } catch (error) {\n      // Handles errors during PDF generation\n      console.error('Error generating PDF:', error.message);\n      setError('Error generating PDF. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  // Function to handle the change of selectedArticulo when an option is selected\n  const handleArticuloChange = event => {\n    // Finds the selected articulo by matching ARTICULO or DESCRIPCION\n    const selected = articulos.find(articulo => articulo.ARTICULO.toUpperCase() === event.target.value.toUpperCase() || articulo.DESCRIPCION.toUpperCase() === event.target.value.toUpperCase());\n    setSelectedArticulo(selected);\n    setSearchText(''); // Resets the search text when an option is selected\n    setSuggestions([]); // Clear suggestions after selecting an option\n  };\n\n  // Function to handle suggestions based on the search input\n  const handleSearchSuggestions = () => {\n    const matches = articulos.filter(articulo => articulo.ARTICULO.toLowerCase().includes(searchText.toLowerCase()) || articulo.DESCRIPCION.toLowerCase().includes(searchText.toLowerCase()));\n    setSuggestions(matches);\n  };\n\n  // Component JSX\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"Buscar Articulo:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: searchText,\n    onChange: e => {\n      setSearchText(e.target.value);\n      handleSearchSuggestions();\n    },\n    placeholder: \"Pendiente su funcion\",\n    disabled: selectedArticulo !== '',\n    className: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  })), suggestions.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.suggestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, suggestions.map(({\n    ARTICULO,\n    DESCRIPCION\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: ARTICULO,\n    onClick: () => handleArticuloChange({\n      target: {\n        value: DESCRIPCION\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, DESCRIPCION))), /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 1\n    }\n  }, \"Seleccione Articulo:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedArticulo ? selectedArticulo.DESCRIPCION : '',\n    onChange: handleArticuloChange,\n    className: styles.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, \"Seleccione Articulo\"), articulos.map(({\n    ARTICULO,\n    DESCRIPCION\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    key: ARTICULO,\n    value: DESCRIPCION,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, DESCRIPCION)))), loading && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, \"Cargando...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleGeneratePDF,\n    disabled: loading || !selectedArticulo,\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, \"Generar PDF con vi\\xF1etas QR\")));\n});\n\n// Exports the QRCodeForm component as the default export of the module\nexport default QRCodeForm;","map":{"version":3,"names":["React","useState","useEffect","axios","FileSaver","styles","QRCodeForm","memo","articulos","setArticulos","selectedArticulo","setSelectedArticulo","searchText","setSearchText","loading","setLoading","error","setError","suggestions","setSuggestions","fetchArticulos","response","get","sortedArticulos","data","sort","a","b","DESCRIPCION","localeCompare","console","message","handleGeneratePDF","post","ARTICULO","responseType","pdfBlob","Blob","type","saveAs","handleArticuloChange","event","selected","find","articulo","toUpperCase","target","value","handleSearchSuggestions","matches","filter","toLowerCase","includes","createElement","className","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","form","label","onChange","e","placeholder","disabled","input","length","map","key","onClick","select","style","textAlign","color","button"],"sources":["C:/Users/JhonatanJesusArceGon/Documents/devs-nyc-proyects/devs/optionpage/options-app/src/QRCodeForm.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import FileSaver from 'file-saver';\r\n// import styles from './QRCodeForm.module.css';\r\n\r\n// const QRCodeForm = React.memo(() => {\r\n//   // State hooks to manage component state\r\n//   const [articulos, setArticulos] = useState([]); // List of articulo fetched from the server\r\n//   const [selectedArticulo, setSelectedArticulo] = useState(''); // Currently selected articulo\r\n//   const [searchText, setSearchText] = useState(''); // Text used for filtering articulo\r\n//   const [loading, setLoading] = useState(false); // Loading indicator\r\n//   const [error, setError] = useState(null); // Error message, if any\r\n\r\n//   useEffect(() => {\r\n//     // Effect hook to fetch articulo when the component mounts\r\n//     const fetchArticulos = async () => {\r\n//       try {\r\n//         // Fetches the list of 'articulo' from the server\r\n//         const response = await axios.get('http://192.168.0.113:5000/articulos');\r\n//         // Sorts the 'articulo' based on 'Descripcion'\r\n//         const sortedArticulos = response.data.sort((a, b) => a.DESCRIPCION.localeCompare(b.DESCRIPCION));\r\n//         // Sets the sorted 'articulo' in the component's state\r\n//         setArticulos(sortedArticulos);\r\n//       } catch (error) {\r\n//         console.error('Error fetching articulo:', error.message);\r\n//         setError('Error fetching articulo. Please try again.');\r\n//       }\r\n//     };\r\n\r\n//     // Calls the fetcharticulo function when the component mounts\r\n//     fetchArticulos();\r\n//   }, []);\r\n\r\n//   // Function to handle the generation and download of a PDF based on the selectedArticulo\r\n//   const handleGeneratePDF = async () => {\r\n//     try {\r\n//       // Sets the loading state to true\r\n//       setLoading(true);\r\n\r\n//       // Makes an API request using Axios to generate PDF\r\n//       const response = await axios.post(\r\n//         'http://192.168.0.113:5000/generarpdf',\r\n//         {\r\n//           ARTICULO: selectedArticulo.ARTICULO,\r\n//           DESCRIPCION: selectedArticulo.DESCRIPCION,\r\n//         },\r\n//         { responseType: 'blob' } // Sets responseType to 'blob' to receive a Blob\r\n//       );\r\n\r\n//       // Creates a Blob object from the response data\r\n//       const pdfBlob = new Blob([response.data], { type: 'application/pdf' });\r\n\r\n//       // Uses FileSaver.js to trigger the download of the PDF\r\n//       FileSaver.saveAs(pdfBlob, `${selectedArticulo.ARTICULO}.pdf`);\r\n\r\n//       // Resets form fields and loading state\r\n//       setSelectedArticulo('');\r\n//       setSearchText('');\r\n//       setLoading(false);\r\n//       setError(null);\r\n//     } catch (error) {\r\n//       // Handles errors during PDF generation\r\n//       console.error('Error generating PDF:', error.message);\r\n//       setError('Error generating PDF. Please try again.');\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Function to handle the change of selectedArticulo when an option is selected\r\n//   const handleArticuloChange = (event) => {\r\n//     // Finds the selected articulo by matching ARTICULO or DESCRIPCION\r\n//     const selected = articulos.find(\r\n//       (articulo) =>\r\n//         articulo.ARTICULO.toUpperCase() === event.target.value.toUpperCase() ||\r\n//         articulo.DESCRIPCION.toUpperCase() === event.target.value.toUpperCase()\r\n//     );\r\n//     setSelectedArticulo(selected);\r\n//     setSearchText(''); // Resets the search text when an option is selected\r\n//   };\r\n\r\n//   // Creates a filtered list of articulo based on the searchText\r\n//   const filteredArticulos = articulos.filter(\r\n//     (articulo) =>\r\n//       articulo.ARTICULO.toLowerCase().includes(searchText.toLowerCase()) ||\r\n//       articulo.DESCRIPCION.toLowerCase().includes(searchText.toLowerCase())\r\n//   );\r\n\r\n//   // Component JSX\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       {/* Form for selecting and generating PDF for an articulo */}\r\n//       <form className={styles.form}>\r\n//         {/* Search input for filtering articulos */}\r\n//         <label className={styles.label}>\r\n//           Buscar Articulo:\r\n//           <input\r\n//             type=\"text\"\r\n//             value={searchText}\r\n//             onChange={(e) => setSearchText(e.target.value)}\r\n//             placeholder=\"Pendiente su funcion\"\r\n//             disabled={selectedArticulo !== ''}\r\n//             className={styles.input}\r\n//           />\r\n//         </label>\r\n\r\n//         {/* Dropdown for selecting an articulo */}\r\n//         <label className={styles.label}>\r\n//           Seleccione Articulo:\r\n//           <select\r\n//             value={selectedArticulo ? selectedArticulo.DESCRIPCION : ''}\r\n//             onChange={handleArticuloChange}\r\n//             className={styles.select}\r\n//           >\r\n//             <option value=\"\" disabled>\r\n//               Seleccione Articulo\r\n//             </option>\r\n\r\n//             {/* Render the sorted options directly */}\r\n//             {filteredArticulos.map(({ ARTICULO, DESCRIPCION }) => (\r\n//               <option key={ARTICULO} value={DESCRIPCION}>\r\n//                 {DESCRIPCION}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </label>\r\n\r\n//         {/* Loading and error messages */}\r\n//         {loading && <p style={{ textAlign: 'center' }}>Cargando...</p>}\r\n//         {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n\r\n//         {/* Button to generate PDF */}\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={handleGeneratePDF}\r\n//           disabled={loading || !selectedArticulo}\r\n//           className={styles.button}\r\n//         >\r\n//           Generar PDF con vi√±etas QR\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// });\r\n\r\n// // Exports the QRCodeForm component as the default export of the module\r\n// export default QRCodeForm;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FileSaver from 'file-saver';\r\nimport styles from './QRCodeForm.module.css';\r\n\r\nconst QRCodeForm = React.memo(() => {\r\n  // State hooks to manage component state\r\n  const [articulos, setArticulos] = useState([]); // List of articulo fetched from the server\r\n  const [selectedArticulo, setSelectedArticulo] = useState(''); // Currently selected articulo\r\n  const [searchText, setSearchText] = useState(''); // Text used for filtering articulo\r\n  const [loading, setLoading] = useState(false); // Loading indicator\r\n  const [error, setError] = useState(null); // Error message, if any\r\n  const [suggestions, setSuggestions] = useState([]); // Suggestions based on search input\r\n\r\n  useEffect(() => {\r\n    // Effect hook to fetch articulo when the component mounts\r\n    const fetchArticulos = async () => {\r\n      try {\r\n        // Fetches the list of 'articulo' from the server\r\n        const response = await axios.get('http://192.168.0.17:5000/articulos');\r\n        // Sorts the 'articulo' based on 'Descripcion'\r\n        const sortedArticulos = response.data.sort((a, b) => a.DESCRIPCION.localeCompare(b.DESCRIPCION));\r\n        // Sets the sorted 'articulo' in the component's state\r\n        setArticulos(sortedArticulos);\r\n      } catch (error) {\r\n        console.error('Error fetching articulo:', error.message);\r\n        setError('Error fetching articulo. Please try again.');\r\n      }\r\n    };\r\n\r\n    // Calls the fetcharticulo function when the component mounts\r\n    fetchArticulos();\r\n  }, []);\r\n\r\n  // Function to handle the generation and download of a PDF based on the selectedArticulo\r\n  const handleGeneratePDF = async () => {\r\n    try {\r\n      // Sets the loading state to true\r\n      setLoading(true);\r\n\r\n      // Makes an API request using Axios to generate PDF\r\n      const response = await axios.post(\r\n        'http://192.168.0.17:5000/generarpdf',\r\n        {\r\n          ARTICULO: selectedArticulo.ARTICULO,\r\n          DESCRIPCION: selectedArticulo.DESCRIPCION,\r\n        },\r\n        { responseType: 'blob' } // Sets responseType to 'blob' to receive a Blob\r\n      );\r\n\r\n      // Creates a Blob object from the response data\r\n      const pdfBlob = new Blob([response.data], { type: 'application/pdf' });\r\n\r\n      // Uses FileSaver.js to trigger the download of the PDF\r\n      FileSaver.saveAs(pdfBlob, `${selectedArticulo.ARTICULO}.pdf`);\r\n\r\n      // Resets form fields and loading state\r\n      setSelectedArticulo('');\r\n      setSearchText('');\r\n      setLoading(false);\r\n      setError(null);\r\n      setSuggestions([]); // Clear suggestions after generating PDF\r\n    } catch (error) {\r\n      // Handles errors during PDF generation\r\n      console.error('Error generating PDF:', error.message);\r\n      setError('Error generating PDF. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to handle the change of selectedArticulo when an option is selected\r\n  const handleArticuloChange = (event) => {\r\n    // Finds the selected articulo by matching ARTICULO or DESCRIPCION\r\n    const selected = articulos.find(\r\n      (articulo) =>\r\n        articulo.ARTICULO.toUpperCase() === event.target.value.toUpperCase() ||\r\n        articulo.DESCRIPCION.toUpperCase() === event.target.value.toUpperCase()\r\n    );\r\n    setSelectedArticulo(selected);\r\n    setSearchText(''); // Resets the search text when an option is selected\r\n    setSuggestions([]); // Clear suggestions after selecting an option\r\n  };\r\n\r\n  // Function to handle suggestions based on the search input\r\n  const handleSearchSuggestions = () => {\r\n    const matches = articulos.filter(\r\n      (articulo) =>\r\n        articulo.ARTICULO.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        articulo.DESCRIPCION.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n    setSuggestions(matches);\r\n  };\r\n\r\n  // Component JSX\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* Form for selecting and generating PDF for an articulo */}\r\n      <form className={styles.form}>\r\n        {/* Search input for filtering articulos */}\r\n        <label className={styles.label}>\r\n          Buscar Articulo:\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => {\r\n              setSearchText(e.target.value);\r\n              handleSearchSuggestions();\r\n            }}\r\n            placeholder=\"Pendiente su funcion\"\r\n            disabled={selectedArticulo !== ''}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        {/* Suggestions based on search input */}\r\n        {suggestions.length > 0 && (\r\n          <ul className={styles.suggestions}>\r\n            {suggestions.map(({ ARTICULO, DESCRIPCION }) => (\r\n              <li key={ARTICULO} onClick={() => handleArticuloChange({ target: { value: DESCRIPCION } })}>\r\n                {DESCRIPCION}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n\r\n       {/* Dropdown for selecting an articulo */}\r\n<label className={styles.label}>\r\n  Seleccione Articulo:\r\n  <select\r\n    value={selectedArticulo ? selectedArticulo.DESCRIPCION : ''}\r\n    onChange={handleArticuloChange}\r\n    className={styles.select}\r\n  >\r\n    <option value=\"\" disabled>\r\n      Seleccione Articulo\r\n    </option>\r\n\r\n    {/* Render the sorted options directly */}\r\n    {articulos.map(({ ARTICULO, DESCRIPCION }) => (\r\n      <option key={ARTICULO} value={DESCRIPCION}>\r\n        {DESCRIPCION}\r\n      </option>\r\n    ))}\r\n  </select>\r\n</label>\r\n\r\n        {/* Loading and error messages */}\r\n        {loading && <p style={{ textAlign: 'center' }}>Cargando...</p>}\r\n        {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n\r\n        {/* Button to generate PDF */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleGeneratePDF}\r\n          disabled={loading || !selectedArticulo}\r\n          className={styles.button}\r\n        >\r\n          Generar PDF con vi√±etas QR\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Exports the QRCodeForm component as the default export of the module\r\nexport default QRCodeForm;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,MAAMC,UAAU,GAAGN,KAAK,CAACO,IAAI,CAAC,MAAM;EAClC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QA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"},"metadata":{},"sourceType":"module"}